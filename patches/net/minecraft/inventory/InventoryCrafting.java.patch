--- ../src-base/minecraft/net/minecraft/inventory/InventoryCrafting.java
+++ ../src-work/minecraft/net/minecraft/inventory/InventoryCrafting.java
@@ -1,18 +1,81 @@
 package net.minecraft.inventory;
 
-import javax.annotation.Nullable;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.item.ItemStack;
+import net.minecraft.item.crafting.IRecipe;
 import net.minecraft.util.text.ITextComponent;
 import net.minecraft.util.text.TextComponentString;
 import net.minecraft.util.text.TextComponentTranslation;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.event.inventory.InventoryType;
 
+import javax.annotation.Nullable;
+import java.util.List;
+
+//CraftBukkit start
+// CraftBukkit end
+
 public class InventoryCrafting implements IInventory
 {
     private final ItemStack[] stackList;
     private final int inventoryWidth;
     private final int inventoryHeight;
     private final Container eventHandler;
+    
+    // CraftBukkit start - add fields
+    public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+    public IRecipe currentRecipe;
+    public IInventory resultInventory;
+    private EntityPlayer owner;
+    private int maxStack = MAX_STACK;
+    	
+    @Override
+    public ItemStack[] getContents() {
+    	return this.stackList;
+    }
+    
+    @Override
+    public void onOpen(CraftHumanEntity who) {
+    	transaction.add(who);
+    }
+    
+    public InventoryType getInvType() {
+    	return stackList.length == 4 ? InventoryType.CRAFTING : InventoryType.WORKBENCH;
+    }
+    
+    @Override
+    public void onClose(CraftHumanEntity who) {
+    	transaction.remove(who);
+    }
+    
+    @Override
+    public List<HumanEntity> getViewers() {
+    	return transaction;
+    }
+    
+    @Override
+    public org.bukkit.inventory.InventoryHolder getOwner() {
+    	return ((owner == null) ? null : owner.getBukkitEntity());
+    }
+    
+    @Override
+    public void setMaxStackSize(int size) {
+    	maxStack = size;
+    	((IInventory)resultInventory).setMaxStackSize(size);
+    }
+    
+    @Override
+    public Location getLocation() {
+    	return owner.getBukkitEntity().getLocation();
+    }
+    
+    public InventoryCrafting(Container container, int i, int j, EntityPlayer player) {
+    	this(container, i, j);
+    	this.owner = player;
+    }
+    // CraftBukkit end
 
     public InventoryCrafting(Container eventHandlerIn, int width, int height)
     {
